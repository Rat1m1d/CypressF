import magentoPage from './pages/magentoPage'

describe('e-shop E2E tests', () => {
    const magentoData = require('../../fixtures/magento.json')
    it('Create new Account', () => {
        cy.visit('https://magento.softwaretestingboard.com/')
        magentoPage.clickButtonByText('li a', 'Create an Account')
        magentoPage.sendText('#firstname', magentoData.firstName)
        magentoPage.sendText('#lastname', magentoData.lastName)
        magentoPage.sendText('#email_address', magentoData.emailAddress)
        magentoPage.sendText('#password', magentoData.password)
        magentoPage.sendText('#password-confirmation', magentoData.password)
        magentoPage.clickButtonByText('button span', 'Create an Account')
        cy.get('[role=alert]').should('contain.text', magentoData.successfulAccountCreationMessage)
    })
    it('Add products', () => {
        cy.visit('https://magento.softwaretestingboard.com/')
        magentoPage.clickButtonByText('a', 'Sign In')
        magentoPage.sendText('#email', magentoData.emailAddress)
        magentoPage.sendText('#pass', magentoData.password)
        magentoPage.clickButtonByText('button span', 'Sign In')
        magentoPage.clickButtonByText('span', 'Women')
        magentoPage.clickButtonByText('.categories-menu a', 'Jackets')
        magentoPage.clickButtonByText('a', magentoData.jacketName)
        cy.wait(1000)
        magentoPage.clickButtonByLocator('[aria-label=' + magentoData.jacketSize + ']')
        magentoPage.clickButtonByLocator('[aria-label=' + magentoData.color + ']')
        magentoPage.clickButtonByLocator('#product-addtocart-button')
        cy.wait(1000)
        magentoPage.clickButtonByText('span', 'Men')
        magentoPage.clickButtonByText('.categories-menu a', 'Pants')
        magentoPage.clickButtonByText('a', magentoData.pantsName)
        cy.wait(1000)
        magentoPage.clickButtonByLocator('[aria-label=' + magentoData.pantsSize + ']')
        magentoPage.clickButtonByLocator('[aria-label=' + magentoData.color + ']')
        magentoPage.clickButtonByLocator('#product-addtocart-button')
        cy.get('.items-total .count').should('have.text', 2)
        magentoPage.clickButtonByLocator('.showcart')
        magentoPage.clickButtonByLocator('.viewcart')
        cy.get('.item-info .product-item-name a').eq(0).should('contain.text', magentoData.jacketName)
        cy.get('.item-info .subtotal .price').eq(0).should('contain.text', magentoData.jacketPrice)
        cy.get('.item-info .product-item-name a').eq(1).should('contain.text', magentoData.pantsName)
        cy.get('.item-info .subtotal .price').eq(1).should('contain.text', magentoData.pantsPrice)
        cy.get('[data-th=\'Order Total\']').should('contain.text', magentoData.totalPrice)
    })
    it('Empty Cart', () => {
        cy.visit('https://magento.softwaretestingboard.com/')
        magentoPage.clickButtonByText('a', 'Sign In')
        magentoPage.sendText("#email", magentoData.emailAddress)
        magentoPage.sendText("#pass", magentoData.password)
        magentoPage.clickButtonByLocator("fieldset #send2 span")
        magentoPage.clickButtonByLocator('.showcart')
        cy.wait(3000)
        cy.get('.cart [title=\'Remove item\']').first().click()
        cy.wait(3000)
        cy.get('.cart [title=\'Remove item\']').first().click()
        cy.get('.cart-empty').should('contain.text', magentoData.emptyCartValidationText)
    })
})